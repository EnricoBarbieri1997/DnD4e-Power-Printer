# .github/workflows/release.yml

on:
  push:
    branches:
      - release
    tags:
      - "v*.*.*"

jobs:
  release:
    permissions:
      contents: write
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
          - target: x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@master
      - name: Extract version
        id: extract_version
        run: echo "VERSION=$(cat Cargo.toml | grep version | head -n1 | cut -d' ' -f3 | sed 's/\"//g')" >> "$GITHUB_OUTPUT"
      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.3
        with:
          RUSTTARGET: ${{ matrix.target }}
          UPLOAD_MODE: none
      - name: Package
        id: package
        run: |
          unzip ${{ steps.compile.outputs.BUILT_ARCHIVE }} -d DnD4ePowerPrinter/
          mkdir -p DnD4ePowerPrinter/user/characters/
          mkdir -p DnD4ePowerPrinter/user/printables/
          cp -r data/ DnD4ePowerPrinter/
          zip -9r ${{ matrix.target }}.zip ./DnD4ePowerPrinter
          path="$(pwd)/${{ matrix.target }}.zip"
          echo "BUILT_ARCHIVE=$path" >> "$GITHUB_OUTPUT"
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.package.outputs.BUILT_ARCHIVE }}
          tag_name: ${{ steps.extract_version.outputs.VERSION }}
          name: Release ${{ github.ref_name }} ${{ steps.extract_version.outputs.VERSION }}
          body: |
            Release ${{ steps.extract_version.outputs.VERSION }}
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
